{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\contactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { getContacts } from './api/ContactService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getAllContacts = async (page = 0, size = 10) => {\n    try {\n      setLoading(true);\n      setCurrentPage(page);\n      const {\n        data\n      } = await getContacts(page, size);\n      setData(data);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching contacts:', error);\n      setError('Failed to load contacts');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getAllContacts();\n  }, []); // Empty dependency array to run only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"WmuyxOaCO+QxQN5NjGYCxz37+N4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","getContacts","jsxDEV","_jsxDEV","App","_s","data","setData","currentPage","setCurrentPage","loading","setLoading","error","setError","getAllContacts","page","size","console","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/contactapp/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { getContacts } from './api/ContactService';\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const getAllContacts = async (page = 0, size = 10) => {\n        try {\n            setLoading(true);\n            setCurrentPage(page);\n            const { data } = await getContacts(page, size);\n            setData(data);\n            setError(null);\n        } catch(error) {\n            console.error('Error fetching contacts:', error);\n            setError('Failed to load contacts');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        getAllContacts();\n    }, []); // Empty dependency array to run only once\n\n    return (\n        <div className=\"App\">\n           \n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,cAAc,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,KAAK;IAClD,IAAI;MACAL,UAAU,CAAC,IAAI,CAAC;MAChBF,cAAc,CAACM,IAAI,CAAC;MACpB,MAAM;QAAET;MAAK,CAAC,GAAG,MAAML,WAAW,CAACc,IAAI,EAAEC,IAAI,CAAC;MAC9CT,OAAO,CAACD,IAAI,CAAC;MACbO,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAMD,KAAK,EAAE;MACXK,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,yBAAyB,CAAC;IACvC,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZe,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIX,OAAA;IAAKe,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEd;AAACjB,EAAA,CA9BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}